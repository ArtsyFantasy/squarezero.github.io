{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","data","location","useState","activeCategory","setActiveCategory","background","title","cardInfo","setCardInfo","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","filter","node","frontmatter","category","backgroundImage","updateActiveCategory","el","document","querySelector","classList","add","setTimeout","remove","finishCardInfo","description","ogImage","image","length","className","map","fields","slug","key","onMouseOver","card","updateCardInfo","style","marginLeft","marginRight","width","rhythm","maxWidth","to","subtitle","excerpt","date","pageQuery"],"mappings":"2FAAA,0HA4GeA,UArGG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAAe,EAEEC,mBAAS,MAA9CC,EAFmC,KAEnBC,EAFmB,OAGVF,mBAAS,CACrCG,WAAY,KACZC,MAAO,KAFJC,EAHmC,KAGzBC,EAHyB,KAkClCC,EAAYT,EAAKU,KAAKC,aAAaL,MACrCM,EAAQZ,EAAKa,kBAAkBC,MAAMC,QAAO,YAAa,IAAXC,EAAU,EAAVA,KAChD,OAAsB,OAAnBb,GAA8C,SAAnBA,GAEvBa,EAAKC,YAAYC,WAAaf,KAGvC,OACE,kBAAC,IAAD,CACEF,SAAUA,EACVK,MAAOG,EACPU,gBAAiBZ,EAAWA,EAASF,WAAa,KAClDF,eAAgBA,EAChBiB,qBAvByB,SAACF,GAC5B,IAAMG,EAAKC,SAASC,cAAc,qBAClCF,EAAGG,UAAUC,IAAI,UACjBC,YAAW,WACTtB,EAAkBc,GAClBG,EAAGG,UAAUG,OAAO,YACnB,MAkBDC,eA7BmB,WACVN,SAASC,cAAc,oBAC/BC,UAAUG,OAAO,YA6BlB,kBAAC,IAAD,CACErB,MAAON,EAAKU,KAAKC,aAAaL,MAC9BuB,YAAa7B,EAAKU,KAAKC,aAAakB,YACpCC,QAAS9B,EAAKU,KAAKC,aAAaoB,SAG/BnB,EAAMoB,QACP,yBAAKC,UAAU,aAAf,eACc,6BADd,gBAIDrB,EAAMsB,KAAI,YAAe,IAAZlB,EAAW,EAAXA,KACNV,EAAQU,EAAKC,YAAYX,OAASU,EAAKmB,OAAOC,KACpD,OACE,6BACEC,IAAKrB,EAAKmB,OAAOC,KACjBH,UAAU,WACVK,YAAa,kBA3DA,SAACC,GACtB,GAAGA,EAAKlC,aAAeE,EAASF,YAAckC,EAAKjC,QAAUC,EAASD,MAAtE,CAEA,GAAGiC,EAAKlC,aAAeE,EAASF,WACnBiB,SAASC,cAAc,oBAC/BC,UAAUC,IAAI,UAEnBC,YAAW,kBAAIlB,EAAY+B,KAAO,MAoDTC,CAAexB,EAAKC,eAErC,yBAAKgB,UAAU,UAAUQ,MAAO,CAC5BC,WAAW,OACXC,YAAY,OACZC,MAAOC,YAAO,IACdC,SAAU,SAEZ,gCACE,4BAAI,kBAAC,OAAD,CAAMC,GAAI/B,EAAKmB,OAAOC,MACvB9B,KAGL,6BAAS2B,UAAS,aAAc1B,EAASD,QAAUU,EAAKC,YAAYX,MAAQ,eAAiB,KAC3F,kBAAC,OAAD,CAAMyC,GAAI/B,EAAKmB,OAAOC,MACnBpB,EAAKC,YAAY+B,UAAYhC,EAAKiC,WAIzC,yBAAKhB,UAAU,gBAAgBQ,MAAO,CAClCC,WAAW,OACXC,YAAY,OACZG,SAAUD,YAAO,OAErB,yBAAKZ,UAAS,kBAAmB1B,EAASD,QAAUU,EAAKC,YAAYX,MAAQ,gBAAkB,KAC5FU,EAAKC,YAAYiC,YAWzB,IAAMC,EAAS","file":"component---src-pages-index-js-3ee96b5d5a7e1bb0d29e.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location }) => {\n\n  let [activeCategory, setActiveCategory] = useState(null);\n  let [cardInfo, setCardInfo] = useState({\n    background: null,\n    title: '',\n  });\n\n  const updateCardInfo = (card) => {\n    if(card.background === cardInfo.background && card.title === cardInfo.title)\n      return;\n    if(card.background !== cardInfo.background) {\n      const el = document.querySelector('.backgroundImage');\n      el.classList.add('hidden');\n    }\n    setTimeout(()=>setCardInfo(card), 200);\n    //setTimeout(()=> el.classList.remove('hidden'), 500);\n  }\n\n  const finishCardInfo = () => {\n    const el = document.querySelector('.backgroundImage');\n    el.classList.remove('hidden');\n  }\n\n  const updateActiveCategory = (category) => {\n    const el = document.querySelector('#opacityContainer');\n    el.classList.add('hidden');\n    setTimeout(()=> {\n      setActiveCategory(category);\n      el.classList.remove('hidden');\n    }, 200\n    );\n  }\n  \n  const siteTitle = data.site.siteMetadata.title;\n  let posts = data.allMarkdownRemark.edges.filter(({node}) => {\n    if(activeCategory === null || activeCategory === 'home')\n      return true;\n    return node.frontmatter.category === activeCategory\n  });\n\n  return (\n    <Layout\n      location={location}\n      title={siteTitle}\n      backgroundImage={cardInfo ? cardInfo.background : null}\n      activeCategory={activeCategory}\n      updateActiveCategory={updateActiveCategory}\n      finishCardInfo={finishCardInfo}\n    >\n      <SEO\n        title={data.site.siteMetadata.title}\n        description={data.site.siteMetadata.description}\n        ogImage={data.site.siteMetadata.image}\n      />\n      {\n        !posts.length &&\n        <div className=\"noContent\">\n          Square zero.<br/>Nothing yet.\n        </div>\n      }\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        return (\n          <article\n            key={node.fields.slug}\n            className=\"homeCard\"\n            onMouseOver={()=>updateCardInfo(node.frontmatter)}\n          >\n            <div className=\"content\" style={{\n                marginLeft: `auto`,\n                marginRight: `auto`,\n                width: rhythm(48),\n                maxWidth: '100%',\n              }}>\n              <header>\n                <h3><Link to={node.fields.slug}>\n                  {title}\n                </Link></h3>\n              </header>\n              <section className={`subtitle ${cardInfo.title === node.frontmatter.title ? 'showSubtitle' : ''}`}>\n                <Link to={node.fields.slug}>\n                  {node.frontmatter.subtitle || node.excerpt}\n                </Link>\n              </section>\n            </div>\n            <div className=\"cardSeparator\" style={{\n                marginLeft: `auto`,\n                marginRight: `auto`,\n                maxWidth: rhythm(48),\n              }}></div>\n            <div className={`date homeDate ${cardInfo.title === node.frontmatter.title ? 'highlightDate' : ''}`}>\n              {node.frontmatter.date}\n            </div>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        image\n        social {\n          email\n        }\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt(pruneLength: 40)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMDD, YYYY\")\n            title\n            subtitle\n            background\n            category\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}